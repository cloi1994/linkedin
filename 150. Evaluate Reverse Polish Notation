class Solution(object):
    def evalRPN(self, tokens):
        """
        :type tokens: List[str]
        :rtype: int
        """
        
        stack = []
        
        for t in tokens:
            if t == '*' or t == '+' or t == '/' or t =='-':
                                
                if len(stack) < 2:
                    break
                
                y = stack.pop()
                x = stack.pop()
                
                stack.append(self.cal(t,x,y))
                
                
            else:
                
                stack.append(int(t))

                
        return stack[-1]
    
    def cal(self,t,x,y):
        
        if t == '*':
                        
            return x * y
            
        elif t == '/':
            
            if x < 0 and y < 0:
                return (-x)/(-y)
            
            if x < 0:
                return -((-x)/y)
            
            if y < 0:
                return -((x)/-y)
            
            return x / y
            
        elif t == '+':
            
            return x + y
            
        else:
            
            return x - y 
        
        
